Day,Learning Focus,Detailed Steps,Milestones/Project Features,Reference URLs,Personal Notes
Day 1,FastAPI basics,"Understand FastAPI's architecture, set up Python environment, install FastAPI and Uvicorn, create main.py with /healthz endpoint, run server locally, test endpoint.","Scaffold project, main.py with /healthz endpoint running locally.","https://fastapi.tiangolo.com/tutorial/, https://fastapi.tiangolo.com/#installation, https://docs.python.org/3/tutorial/venv.html, https://www.uvicorn.org/settings/",
Day 2,"Pydantic Models, User CRUD","Learn Pydantic for data validation, define User model, build POST/GET /users endpoints, test with Swagger UI or Postman.",/users endpoint for create/get users with validation.,"https://fastapi.tiangolo.com/tutorial/body/, https://docs.pydantic.dev/latest/, https://www.postman.com/",
Day 3,Async PostgreSQL with SQLAlchemy / Supabase,"Set up PostgreSQL locally or use Supabase, install async DB libs, create DB models for chats/users, implement async CRUD with FastAPI, test with persistent storage.",/chats endpoint with async DB storage.,"https://fastapi.tiangolo.com/advanced/async-sql-databases/, https://docs.sqlalchemy.org/en/20/orm/extensions/asyncio.html, https://supabase.com/docs/guides/getting-started/quickstarts",
Day 4,"Async Endpoints, Background Tasks","Convert endpoints to async def, implement background tasks for chat analysis with FastAPI BackgroundTasks, learn async/await importance.",Async chat message processing with background tasks.,"https://fastapi.tiangolo.com/async/, https://fastapi.tiangolo.com/tutorial/background-tasks/, https://realpython.com/async-io-python/",
Day 5,"JWT Auth, Secure Endpoints","Implement JWT authentication with FastAPI Security, create signup/login endpoints, protect chat endpoints with OAuth2PasswordBearer dependency.",/login and /signup endpoints with JWT auth secured routes.,"https://fastapi.tiangolo.com/tutorial/security/, https://jwt.io/introduction/, https://python-jose.readthedocs.io/en/latest/",
Day 6,WebSockets with FastAPI,"Build WebSocket endpoint for group chat, manage multiple connections, broadcast messages to clients, test with multiple clients.",/ws/chat WebSocket endpoint supporting 2+ clients.,"https://fastapi.tiangolo.com/advanced/websockets/, https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API, https://github.com/vi/websocat",
Day 7,Load Testing WebSockets,"Learn load testing tools (Locust, k6), script to simulate 200+ concurrent WebSocket clients, measure latency and errors, optimize server config.",Simulate 200+ concurrent WebSocket clients; fix scaling issues.,"https://fastapi.tiangolo.com/advanced/concurrency/, https://docs.locust.io/en/stable/, https://k6.io/docs/using-k6/protocols/websockets/",
Day 8,Docker and Docker Compose,"Learn Docker basics and write Dockerfile for FastAPI app, create docker-compose.yml to run app with PostgreSQL, test containerized deployment.","Containerize FastAPI app and PostgreSQL DB, run with Docker Compose.","https://docs.docker.com/get-started/, https://fastapi.tiangolo.com/deployment/docker/, https://docs.docker.com/compose/",
Day 9,Terraform Basics,"Install Terraform, understand providers and state, write config to provision AWS EC2 instance, deploy and destroy instances safely.",Provision minimal AWS EC2 using Terraform.,https://developer.hashicorp.com/terraform/tutorials/aws-get-started/aws-build,
Day 10,Terraform RDS and ECS Modules,"Use Terraform modules to provision AWS RDS Postgres and ECS compute resources, test infra deployment.",Script infrastructure for DB and compute.,https://registry.terraform.io/modules/terraform-aws-modules/rds/aws/latest,
Day 11,Blue-Green and Canary Deployments,"Read deployment strategies, set up two container versions, manually switch traffic to simulate deployment.",Deploy two containers and switch traffic manually.,https://martinfowler.com/bliki/BlueGreenDeployment.html,
Day 12,Prometheus Integration,"Set up Prometheus server, add /metrics endpoint to FastAPI using Prometheus client library, verify scraping.",Expose /metrics for Prometheus.,"https://prometheus.io/docs/introduction/overview/, https://github.com/stephenhillier/starlette-prometheus",
Day 13,Grafana Dashboards,"Deploy Grafana, connect datasource to Prometheus, build dashboards visualizing users, WebSocket connections, errors, latency.",Visualize app metrics in Grafana dashboards.,https://grafana.com/docs/grafana/latest/getting-started/,
Day 14,Distributed Tracing with OpenTelemetry,"Install OpenTelemetry SDK, instrument FastAPI routes, collect traces in Jaeger or Grafana, analyze request flows.",Add distributed tracing for API and WebSocket endpoints.,https://opentelemetry.io/docs/instrumentation/python/,
Day 15,Async Optimization and Profiling,"Use py-spy to profile endpoints, locate blocking calls, refactor for async, test performance improvements.",Profile and optimize async endpoints.,https://github.com/benfred/py-spy,
Day 16,Redis Integration for Cache and Rate Limiting,"Docker run Redis, install aioredis, cache frequent DB results, implement simple rate limiter.",Implement caching and rate limiting with Redis.,"https://redis.io/docs/getting-started/, https://aioredis.readthedocs.io/en/latest/",
Day 17,Graceful Shutdown and Failover,"Implement signal handlers in FastAPI for lifecycle events, test shutdown/restarts with Docker, ensure clean resource handling.",Graceful shutdown handlers and failover simulation.,"https://fastapi.tiangolo.com/advanced/events/, https://docs.gunicorn.org/en/stable/signals.html",
Day 18,Background Jobs with Celery and Redis,"Set up Celery with Redis broker, offload long running tasks like AI chat analysis to background workers.",Background job processing with Celery.,https://docs.celeryq.dev/en/latest/getting-started/index.html,
Day 19,Network Packet Tracing and Debugging,"Install Wireshark and tcpdump, capture packets between API and DB, analyze for bottlenecks.",Analyze network traffic for performance issues.,https://www.wireshark.org/docs/wsug_html_chunked/,
Day 20,Real-Time Load Testing,"Use k6 or Locust to simulate 500+ concurrent users, analyze server metrics, adjust config.",Real-time stress test with 500+ concurrent clients.,https://k6.io/docs/,
Day 21,Reliability Testing and Failure Simulation,"Simulate Redis/DB restarts, monitor error handling, automatic reconnect, log failures.",Test failover and recovery under component failure.,https://principlesofchaos.org/,
Day 22,LLM Observability and Logging,"Instrument AI chat backend with detailed logs for prompts, responses, latency using LangSmith or custom.",Logging and observability for AI tutor endpoints.,https://docs.langchain.com/docs/langsmith/getting-started,
Day 23,OSS or Internal Tool Contribution,"Choose OSS FastAPI plugin or create internal CLI tool, write README, submit PR or maintain internally.",Contribute/open-source or create internal tool.,https://opensource.guide/how-to-contribute/,
Day 24,Supabase Integration as Cloud Postgres,"Migrate local Postgres schema/data to Supabase, connect FastAPI to Supabase cloud DB, test.",Cloud Postgres migration using Supabase.,https://supabase.com/docs/reference/python,
Day 25,Competitive Coding Practice,Solve 3-5 algorithmic problems on LeetCode or CodeChef focusing on systems and concurrency.,Improve problem solving; update coding profiles.,"https://leetcode.com/, https://www.codechef.com/practice",
Day 26,Observability End-to-End Polish,"Validate metrics/log/tracing pipeline end-to-end, polish Grafana dashboards, document debugging process.",Complete monitoring stack polished.,https://opentelemetry.io/docs/concepts/observability/,
Day 27,Project Documentation and Interview Prep,"Write detailed README/docs, prepare project demo, rehearse system design answers.","Project docs, demo video/screenshots.","https://github.com/showcases/impressively-presented-projects, https://github.com/donnemartin/system-design-primer",
Day 28,Buffer and Review,"Catch up missed tasks, finalize project codebase, conduct self Q&A sessions.",Final integration and test.,,
